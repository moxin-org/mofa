
import json
import os
from dotenv import load_dotenv
from openai import OpenAI
from mofa.agent_build.base.base_agent import MofaAgent, run_agent
from mofa.utils.ai.conn import generate_json_from_llm, structor_llm
from mofa.utils.files.dir import make_dir
from mofa.utils.files.read import read_yaml
from agent_code_generator import agent_config_dir_path
from pydantic import BaseModel, Field
from datetime import datetime
from typing import Optional

from mofa.utils.files.write import write_file


class AgentInfo(BaseModel):
    """
    Represents information about an agent, including its name, creation time,
    the Python code generated by the LLM, and an optional description.
    """
    # agent_name: str = Field(..., description="TheThe name of the agent. name of the agent.")
    creation_time: str = Field(..., description="The creation time of the agent.")
    llm_generated_code: str = Field(..., description="The Python code generated by the LLM.")
    description: Optional[str] = Field(None, description="An optional description of the agent.")

def generate_agent_config(user_query:str,agent_config_path:str,env_file_path:str,response_model:object):
    agent_config = read_yaml(
        file_path=agent_config_path
    )
    sys_prompt = agent_config.get('agent', {}).get('prompt', '')
    messages = [
        {
            "role": "system",
            "content": sys_prompt
        },
        {
            "role": "user",
            "content": user_query
        }
    ]
    response = structor_llm(env_file=env_file_path, messages=messages, prompt=user_query,response_model=response_model)
    return response



@run_agent
def run(agent: MofaAgent):
    env_file_path = os.path.join(agent_config_dir_path, '.env.secret')
    agent_config_path = os.path.join(agent_config_dir_path, 'configs', 'agent.yml')
    receive_data = agent.receive_parameters(['query','agent_config'])
    agent_name = json.loads(receive_data.get('agent_config')).get('agent_name',None)
    module_name = json.loads(receive_data.get('agent_config')).get('module_name',None)

    user_query = f"user q: {receive_data.get('query')}  /n agent config:  {receive_data.get('agent_config')}"
    result = generate_agent_config(response_model=AgentInfo, user_query=user_query, agent_config_path=agent_config_path, env_file_path=env_file_path)

    if agent_name is not None:
        make_dir(f"{agent_name}/{module_name}")
        write_file(data=result.llm_generated_code, file_path=f"{agent_name}/{module_name}/main.py")
        write_file(data='    ', file_path=f"{agent_name}/{module_name}/__init__.py")
    print('user_query : ',user_query)
    print('result : ',result.json())
    agent.send_output(agent_output_name='code_generator_result', agent_result=result.json())

def main():
    agent = MofaAgent(agent_name='agent_code_generator')
    run(agent=agent)

if __name__ == "__main__":
    main()
